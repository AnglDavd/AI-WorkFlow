name: Security Audit

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for comprehensive audit
    
    - name: Set up permissions
      run: |
        chmod +x ./ai-dev
        chmod +x ./.ai_workflow/scripts/*.sh
    
    - name: Run Framework Security Audit
      run: |
        # Set environment variables for automation
        export AUTO_CONFIRM=true
        export CI_MODE=true
        export AUDIT_LEVEL=comprehensive
        
        # Run the integrated security audit
        ./ai-dev audit --verbose
    
    - name: Generate Security Report
      if: always()
      run: |
        # Generate detailed security report
        ./ai-dev diagnose --security-focus > security-report.md
        
        # Create audit summary
        echo "## Security Audit Summary" >> audit-summary.md
        echo "Date: $(date)" >> audit-summary.md
        echo "Commit: ${{ github.sha }}" >> audit-summary.md
        echo "Branch: ${{ github.ref_name }}" >> audit-summary.md
        echo "" >> audit-summary.md
        
        # Add audit results
        if [ -f ".ai_workflow/cache/audit.log" ]; then
          echo "### Audit Results" >> audit-summary.md
          cat .ai_workflow/cache/audit.log >> audit-summary.md
        fi
    
    - name: Upload Security Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-report-${{ github.run_number }}
        path: |
          security-report.md
          audit-summary.md
          .ai_workflow/cache/audit.log
        retention-days: 30
    
    - name: Comment PR with Audit Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          let comment = '## üõ°Ô∏è Security Audit Results\n\n';
          
          try {
            if (fs.existsSync('audit-summary.md')) {
              const auditSummary = fs.readFileSync('audit-summary.md', 'utf8');
              comment += auditSummary;
            } else {
              comment += '‚úÖ Security audit completed successfully\n';
            }
          } catch (error) {
            comment += '‚ùå Error reading audit results\n';
          }
          
          comment += '\nüìã Full security report available in workflow artifacts';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: Fail on Security Issues
      run: |
        # Check if security issues were found
        if [ -f ".ai_workflow/cache/audit.log" ]; then
          if grep -q "CRITICAL\|HIGH" .ai_workflow/cache/audit.log; then
            echo "‚ùå Critical or high-severity security issues found"
            exit 1
          fi
        fi
        
        echo "‚úÖ No critical security issues detected"

  code-quality-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up permissions
      run: |
        chmod +x ./ai-dev
    
    - name: Run Quality Validation
      run: |
        export AUTO_CONFIRM=true
        export CI_MODE=true
        
        # Run quality validation which includes code audit
        ./ai-dev quality . --verbose
    
    - name: Run Pre-commit Validation
      run: |
        export AUTO_CONFIRM=true
        
        # Run pre-commit validation system
        ./ai-dev precommit validate --all-files
    
    - name: Upload Quality Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: quality-audit-report-${{ github.run_number }}
        path: |
          .ai_workflow/cache/quality_report.json
          .ai_workflow/cache/precommit_report.json
        retention-days: 30