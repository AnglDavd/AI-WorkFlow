name: Code Audit & Quality Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  comprehensive-code-audit:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        audit-type: [security, quality, dependencies, compliance]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up environment
      run: |
        chmod +x ./ai-dev
        chmod +x ./.ai_workflow/scripts/*.sh
        
        # Set automation environment variables
        export AUTO_CONFIRM=true
        export CI_MODE=true
        export GITHUB_ACTIONS=true
    
    - name: Run Security Audit
      if: matrix.audit-type == 'security'
      run: |
        echo "🛡️ Running Security Audit..."
        ./ai-dev audit --verbose --output-format=json > security-audit.json
        
        # Generate human-readable report
        ./ai-dev audit --verbose > security-audit.txt
    
    - name: Run Quality Audit
      if: matrix.audit-type == 'quality'
      run: |
        echo "📊 Running Quality Audit..."
        ./ai-dev quality . --verbose --output-format=json > quality-audit.json
        
        # Generate detailed quality report
        ./ai-dev quality . --verbose > quality-audit.txt
    
    - name: Run Dependencies Audit
      if: matrix.audit-type == 'dependencies'
      run: |
        echo "📦 Running Dependencies Audit..."
        
        # Check for dependency vulnerabilities
        if [ -f "package.json" ]; then
          npm audit --audit-level=moderate --json > npm-audit.json || true
        fi
        
        # Check Python dependencies if present
        if [ -f "requirements.txt" ]; then
          pip install safety
          safety check --json > python-audit.json || true
        fi
        
        # Framework-specific dependency check
        ./ai-dev diagnose --focus=dependencies > dependencies-audit.txt
    
    - name: Run Compliance Audit
      if: matrix.audit-type == 'compliance'
      run: |
        echo "📋 Running Compliance Audit..."
        
        # Check framework compliance
        ./ai-dev precommit validate --all-files --verbose > compliance-audit.txt
        
        # Check documentation compliance
        ./ai-dev diagnose --focus=documentation > documentation-audit.txt
    
    - name: Process Audit Results
      run: |
        echo "📊 Processing ${{ matrix.audit-type }} audit results..."
        
        # Create summary based on audit type
        case "${{ matrix.audit-type }}" in
          "security")
            echo "## 🛡️ Security Audit Results" > audit-summary.md
            if [ -f "security-audit.json" ]; then
              echo "### JSON Report Available" >> audit-summary.md
              echo "Security audit completed with detailed JSON output" >> audit-summary.md
            fi
            ;;
          "quality")
            echo "## 📊 Quality Audit Results" > audit-summary.md
            if [ -f "quality-audit.json" ]; then
              echo "### Quality Metrics" >> audit-summary.md
              echo "Quality audit completed with metrics" >> audit-summary.md
            fi
            ;;
          "dependencies")
            echo "## 📦 Dependencies Audit Results" > audit-summary.md
            echo "### Dependency Security Check" >> audit-summary.md
            ;;
          "compliance")
            echo "## 📋 Compliance Audit Results" > audit-summary.md
            echo "### Framework Compliance Check" >> audit-summary.md
            ;;
        esac
        
        echo "Audit completed at: $(date)" >> audit-summary.md
    
    - name: Upload Audit Results
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.audit-type }}-audit-${{ github.run_number }}
        path: |
          *-audit.json
          *-audit.txt
          audit-summary.md
        retention-days: 30
    
    - name: Check for Critical Issues
      run: |
        # Check for critical issues that should fail the workflow
        critical_found=false
        
        case "${{ matrix.audit-type }}" in
          "security")
            if [ -f "security-audit.txt" ]; then
              if grep -q "CRITICAL\|HIGH" security-audit.txt; then
                echo "❌ Critical security issues found"
                critical_found=true
              fi
            fi
            ;;
          "quality")
            if [ -f "quality-audit.txt" ]; then
              if grep -q "FAIL\|ERROR" quality-audit.txt; then
                echo "❌ Quality issues found"
                critical_found=true
              fi
            fi
            ;;
          "dependencies")
            if [ -f "npm-audit.json" ]; then
              if grep -q "high\|critical" npm-audit.json; then
                echo "❌ High/Critical npm vulnerabilities found"
                critical_found=true
              fi
            fi
            ;;
          "compliance")
            if [ -f "compliance-audit.txt" ]; then
              if grep -q "VIOLATION\|CRITICAL" compliance-audit.txt; then
                echo "❌ Compliance violations found"
                critical_found=true
              fi
            fi
            ;;
        esac
        
        if [ "$critical_found" = true ]; then
          echo "::error::Critical issues found in ${{ matrix.audit-type }} audit"
          exit 1
        fi
        
        echo "✅ ${{ matrix.audit-type }} audit passed"

  consolidate-results:
    runs-on: ubuntu-latest
    needs: comprehensive-code-audit
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download all audit artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: "*-audit-*"
        merge-multiple: true
    
    - name: Generate Consolidated Report
      run: |
        echo "# 📊 Comprehensive Code Audit Report" > consolidated-report.md
        echo "Generated: $(date)" >> consolidated-report.md
        echo "Commit: ${{ github.sha }}" >> consolidated-report.md
        echo "" >> consolidated-report.md
        
        # Add each audit type results
        for audit_type in security quality dependencies compliance; do
          echo "## ${audit_type^} Audit" >> consolidated-report.md
          
          if [ -f "${audit_type}-audit.txt" ]; then
            echo "### Results" >> consolidated-report.md
            echo '```' >> consolidated-report.md
            head -20 "${audit_type}-audit.txt" >> consolidated-report.md
            echo '```' >> consolidated-report.md
          fi
          
          echo "" >> consolidated-report.md
        done
        
        echo "## 🎯 Summary" >> consolidated-report.md
        echo "All audit types completed. Check individual artifacts for detailed results." >> consolidated-report.md
    
    - name: Upload Consolidated Report
      uses: actions/upload-artifact@v4
      with:
        name: consolidated-audit-report-${{ github.run_number }}
        path: consolidated-report.md
        retention-days: 90