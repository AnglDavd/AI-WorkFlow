mindmap
  root((🤖 AI Framework<br/>65 Workflows))
    
    🚀 Setup Workflows
      01_start_setup
        Initialize environment
        Check dependencies
        Set permissions
      02_configure_environment
        Load configuration
        Validate settings
        Set defaults
      03_create_structure
        Create directories
        Generate templates
        Set up workflows
      04_validate_setup
        Run health checks
        Verify permissions
        Test connectivity
      05_finalize_setup
        Save configuration
        Generate reports
        Notify completion
    
    💼 PRD Workflows
      generate_prd
        Parse requirements
        Generate structure
        Validate format
      validate_prd
        Check completeness
        Verify syntax
        Validate business rules
      process_prd
        Extract tasks
        Generate timeline
        Create deliverables
    
    📋 PRP Workflows
      create_prp
        Generate template
        Add context
        Set validation
      execute_prp
        Parse instructions
        Execute tasks
        Track progress
      validate_prp
        Check completion
        Verify quality
        Generate reports
    
    🏃 Run Workflows
      01_run_prp
        Load PRP file
        Initialize execution
        Start monitoring
      process_task_list
        Parse tasks
        Prioritize execution
        Track dependencies
      execute_tasks
        Run individual tasks
        Handle errors
        Report progress
    
    🛡️ Security Workflows
      validate_inputs
        Sanitize data
        Check permissions
        Validate paths
      audit_system
        Security scan
        Vulnerability check
        Compliance audit
      check_permissions
        File permissions
        Directory access
        User rights
    
    🔄 Sync Workflows
      external_feedback
        Collect feedback
        Process submissions
        Generate tasks
      framework_updates
        Check for updates
        Download changes
        Apply updates
      community_integration
        GitHub integration
        Issue processing
        PR management
    
    💻 CLI Workflows
      enhanced_cli_validation
        Command validation
        Parameter checking
        Help generation
      interactive_setup
        User interaction
        Progress display
        Error handling
    
    📊 Monitoring Workflows
      token_usage_review
        Usage tracking
        Cost analysis
        Optimization
      performance_monitoring
        Response times
        Resource usage
        Bottlenecks
      health_checks
        System health
        Component status
        Availability
    
    📝 Feedback Workflows
      collect_feedback
        User feedback
        Error reports
        Feature requests
      process_feedback
        Categorization
        Prioritization
        Task creation
      community_feedback
        GitHub issues
        Pull requests
        Discussions
    
    🔧 Common Workflows
      error_handling
        Error capture
        Recovery logic
        User notification
      circuit_breaker
        Failure detection
        Service protection
        Recovery mechanisms
      apply_self_protection
        System protection
        Resource limits
        Safety checks
      escalate_to_user
        User notification
        Manual intervention
        Guidance provision
      review_and_refactor
        Code review
        Quality checks
        Optimization
