#!/bin/bash

# Git Pre-push Hook - AI Development Framework
# This hook runs automatically before each push to perform additional validation

set -euo pipefail

# Get the directory of the hook script
HOOK_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$HOOK_DIR/../../.." && pwd)"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Logging function
log() {
    echo -e "${BLUE}[PRE-PUSH]${NC} $*"
}

error() {
    echo -e "${RED}[PRE-PUSH ERROR]${NC} $*" >&2
}

success() {
    echo -e "${GREEN}[PRE-PUSH SUCCESS]${NC} $*"
}

warning() {
    echo -e "${YELLOW}[PRE-PUSH WARNING]${NC} $*"
}

# Change to project root
cd "$PROJECT_ROOT"

log "Starting pre-push validation..."

# Check if pre-push validation is enabled
if [ -f ".ai_workflow/precommit/config/validation_rules.json" ]; then
    if command -v python3 >/dev/null 2>&1; then
        PRE_PUSH_ENABLED=$(python3 -c "
import json
try:
    with open('.ai_workflow/precommit/config/validation_rules.json', 'r') as f:
        config = json.load(f)
    print(config.get('hooks', {}).get('pre_push', {}).get('enabled', 'true'))
except:
    print('true')
" 2>/dev/null || echo "true")
    else
        PRE_PUSH_ENABLED="true"
    fi
    
    if [ "$PRE_PUSH_ENABLED" = "false" ]; then
        warning "Pre-push validation is disabled in configuration"
        exit 0
    fi
fi

# Run comprehensive validation before push
log "Running comprehensive pre-push validation..."

# 1. Run pre-commit validation (if not already done)
if [ -f "./ai-dev" ]; then
    log "Step 1: Pre-commit validation"
    if ! ./ai-dev precommit validate; then
        error "Pre-commit validation failed"
        exit 1
    fi
    
    # 2. Run security audit
    log "Step 2: Security audit"
    if ! ./ai-dev audit 2>/dev/null; then
        warning "Security audit completed with warnings"
        # Don't fail on security audit warnings, just warn
    fi
    
    # 3. Run quality validation
    log "Step 3: Quality validation"
    if ! ./ai-dev quality . 2>/dev/null; then
        warning "Quality validation completed with warnings"
        # Don't fail on quality warnings, just warn
    fi
    
    # 4. Check for CLAUDE.md updates if framework files changed
    log "Step 4: Documentation synchronization check"
    if git diff --name-only HEAD~1 HEAD 2>/dev/null | grep -E "(\.sh$|ai-dev|\.md$)" >/dev/null; then
        if [ -f "CLAUDE.md" ]; then
            # Check if CLAUDE.md was modified in recent commits
            if ! git log --oneline -5 --name-only | grep -q "CLAUDE.md"; then
                warning "Framework files changed but CLAUDE.md not updated recently"
                warning "Consider updating CLAUDE.md to reflect recent changes"
            fi
        fi
    fi
    
else
    error "ai-dev script not found"
    exit 1
fi

success "Pre-push validation passed"
success "Push is ready to proceed"
exit 0